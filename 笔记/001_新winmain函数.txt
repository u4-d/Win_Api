旧:
int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance,    PSTR szCmdLine, int iCmdShow)

新:
int APIENTRY wWinMain(_In_ HINSTANCE hInstance, _In_opt_ HINSTANCE hPrevInstance,_In_ LPWSTR lpCmdLine,_In_ int nCmdShow)

1._In_ HINSTANCE hInstance：

hInstance 是当前应用程序实例的句柄（handle）。它是一个指向当前应用程序模块的句柄，通常由操作系统在程序启动时提供。
这个句柄可以用于加载资源、创建窗口等操作。
在 Windows API 中，HINSTANCE 用于标识一个应用程序或模块的实例，通常它代表一个内存中的程序模块。

2._In_opt_ HINSTANCE hPrevInstance：

hPrevInstance 是一个历史遗留参数，在现代 Windows 应用程序中，它总是被设置为 NULL。
这个参数用于标识当前实例之前的应用程序实例。在早期版本的 Windows 中（如 Windows 3.x），它被用来告诉应用程序是否存在先前的实例。
现代 Windows 应用程序不再使用这个参数，始终将它设置为 NULL，因此它可以被忽略。

3._In_ LPWSTR lpCmdLine：

lpCmdLine 是一个指向命令行参数的指针（字符串）。它包含启动应用程序时传递给程序的命令行参数。
LPWSTR 表示指向宽字符字符串的指针（wchar_t 类型）。它允许传递包含 Unicode 字符的字符串。
需要注意的是，这个参数的第一个字符是一个空字符（'\0'），后面才是实际的命令行参

4._In_ int nCmdShow：

nCmdShow 是一个整数值，告诉操作系统如何显示主窗口。
它的值由操作系统在程序启动时提供，并且通常是由 Windows 消息处理机制设置的，表示窗口显示的方式。
例如，SW_SHOW、SW_HIDE 等常量用于控制窗口的显示方式。
这个参数决定了窗口在启动时的显示状态，比如窗口是否最大化、最小化或正常显示。

5.返回值
wWinMain 函数返回一个整数值。通常，这个值表示应用程序的退出状态，操作系统使用它来指示程序的退出状态。
如果程序正常退出，返回 0 通常表示成功；其他值通常表示发生错误或异常。
强制转换为 int 类型
return (int) msg.wParam;

6.APIENTRY 关键字
APIENTRY 是一个宏，用于指定函数调用约定（调用约定决定了函数如何与操作系统进行交互）。
在 Windows 中，APIENTRY 是 __stdcall 调用约定的别名，表示函数使用标准的调用约定。
它告诉编译器函数如何处理参数，以及如何清理堆栈，确保操作系统正确地与应用程序交互。

_In_ 和 _In_opt_ 是 Windows 编程中用于标注函数参数的特性（annotation），它们属于 Microsoft 的 代码分析 和 API 扩展 的一部分，
特别是与 安全性 和 代码验证 相关。它们有助于明确每个参数的使用约定，从而提高代码的可靠性和可维护性。

1. _In_ 解释
_In_ 是一种注解，表示函数的参数是输入参数，它告诉编译器和开发者该参数在函数调用时应该由调用者传入。
In 关键字表示该参数是“输入”参数，意思是它在函数内是用于读取数据的。
在 Windows 编程中，_In_ 可以用于指针或其他类型的参数，表明该参数是在函数内部读取或处理的。

2. _In_opt_ 解释
_In_opt_ 是 _In_ 的一个变种，表示该参数是可选的输入参数。这意味着函数调用者可以选择是否传递该参数。
opt（optional）表示“可选”，即这个参数可以是 NULL 或不传递。如果传递了这个参数，函数会根据它进行处理；
如果未传递或传递了 NULL，则函数应该能够安全地处理这种情况。

Chap02
ScrnSize.cpp
函数参数添加 const,不然会报错
int CDECL MessageBoxPrintf (const TCHAR * szCaption, const TCHAR * szFormat, ...)

